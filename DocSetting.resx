<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANkAAADfCAYAAAB753ZrAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAABmBJREFUeF7t3KGOVEkAheF5AhySBAtIPEHxBljeAIFF8QQEjUbhkGjsSMgkKMAg
        UAj03dxkV3RyTc9WnZ3a853ksyPo+emum566+PPnzwbMIzKYTGQwmchgMpHBZCKDyUQGk4kMJhMZTCYy
        mExkMJnIYDKRwWQig8lEBpOJDCYTGUwmMphsuch+/vy5XV5eUubr16+Hvw8rWC6yDx8+bPfu3aPM8+fP
        D38fVrBcZO/evdsuLi62p0+fbq9evaLA/fv3t4cPH25v377drq6uDn8vbrJlI3v//v1mHdv/Q719+/b2
        +PHj7ePHj4e/FzeZyOzGT2RhIuubyMJE1jeRhYmsbyILE1nfRBYmsr6JLExkfRNZmMj6JrIwkfVNZGEi
        65vIwkTWN5GFiaxvIgsTWd9EFiayvoksTGR9E1mYyPomsjCR9U1kYSLrm8jCRNY3kYWJrG8iCxNZ30QW
        JrK+iSxsZmT7zzy694/rG/E6iSxsZmQvXrzYHjx4wED7v+m/ncjCZkb248eP7fPnzwy0/5v+24kszJms
        byILGxXZ79+/D//nZSzvZMWR7S/W0RmCsZzJiiP78uXL4dMwxhrxsV5kYc5kfRNZmMj6JrIwHxfX4uOi
        Bx9M5sFHcWQe4Wd4hO9MZgtMZGGrv5ON+J+9bSILW/1MNuKM0jaRhY2K7L96uuhj7vkTWZgzWd9EFiay
        voksTGR9E1mYyPomsjCR9U1kYSLrm8jCRNY3kYWJrG8iCxNZ30QWNjMyV8KN51v4IjuZy03H8/dkIjvZ
        /jOPvm/I9Y14nUQW5kzWN5GFiaxvIgsbFZmLdDJ8XCyObH+xjg7qjOXBR3FkLtLJ8AjfmcwWmMjCvJOt
        xTuZMxmTOZMVR+bpYsaIj/UiC3Mm65vIwkTWN5GFrf5x0X8O509kYas/+HCD8PkTWdioyNyFv85EFuZM
        1jeRhYmsbyILE1nfRBYmsr6JLExkfRNZmMj6JrIwkfVNZGEi65vIwkTWN5GFzYxs/5lH3zfk+ka8TiIL
        mxmZG4TH80ebIjuZu/DHc/2AyGyBiSxsVGQu0snwTlYc2f5iHZ0hGMuZrDgyF+lkjPhYL7IwZ7K+iSxM
        ZH0TWZiPi2vxcdGDDybz4KM4Mo/wMzzCdyazBSaysNXfyVwJd/5EFrb6mczlpudPZGGjInNN9zoTWZgz
        Wd9EFiayvoksTGR9E1mYyPomsjCR9U1kYSLrm8jCRNY3kYWJrG8iCxNZ30QWNjMyV8KN51v4IjuZy03H
        8/dkIjvZ/jOPvm/I9Y14nUQW5kzWN5GFiaxvIgsbFZmLdDJ8XCyObH+xjg7qjOXBR3FkLtLJ8AjfmcwW
        mMjCvJOtxTuZMxmTOZMVR+bpYsaIj/UiC3Mm65vIwkTWN5GFrf5x0X8O509kYas/+HCD8PkTWdioyNyF
        v85EFuZM1jeRhYmsbyILE1nfRBYmsr6JLExkfRNZmMj6JrIwkfVNZGEi65vIwkTWN5GFzYxs/5lH3zfk
        +ka8TiILmxmZG4TH80ebIjuZu/DHc/2AyGyBiSxsVGQu0snwTlYc2f5iHZ0hGMuZrDgyF+lkjPhYL7Iw
        Z7K+iSxMZH0TWZiPi2vxcdGDDybz4KM4Mo/wMzzCdyazBSaysNXfyVwJd/5EFrb6mczlpudPZGGjInNN
        9zoTWZgzWd9EFiayvoksTGR9E1mYyPomsjCR9U1kYSLrm8jCRNY3kYWJrG8iCxNZ30QWNjMyV8KN51v4
        IjuZy03H8/dkIjvZ/jOPvm/I9Y14nUQW5kzWN5GFiaxvIgsbFZmLdDJ8XCyObH+xjg7qjOXBR3FkLtLJ
        8AjfmcwWmMjCRNY3kYWJrG8iCxNZ30QWJrK+iSxMZH0TWZjI+iayMJH1TWRhIuubyMJE1jeRhYmsbyIL
        E1nfRBYmsr6JLExkfRNZmMj6JrIwkfVNZGH/RPb69evDPxLk/+fJkyciS/onsjt37hz+uTv/P7du3RJZ
        0uXl5fby5cvt0aNH2927dymxxyaysDdv3mzPnj2jzKdPnw5/H26yZSP7/v37dnV1RZlfv34d/j7cZMtG
        BqsQGUwmMphMZDCZyGAykcFkIoPJRAaTiQwmExlMJjKYTGQwmchgMpHBZCKDyUQGk4kMJhMZTCYymExk
        MNnFt2/fNmCei/0eQ2Cei7+vGzezKdu2vwAOX35y1Zvl6AAAAABJRU5ErkJggg==
</value>
  </data>
</root>